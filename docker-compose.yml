version: '3.8'

services:
  chatbot:
    image: python:3.10.11-slim
    container_name: chatbot_vm
    build:  # 컨테이너 이미지를 빌드하기 위한 설정입니다.
      context: ./chatbot  # Dockerfile이 위치한 디렉토리를 지정합니다.
      dockerfile: Dockerfile  # 사용할 Dockerfile의 이름을 지정합니다.
    ports:  # 호스트와 컨테이너 간의 포트 매핑을 정의합니다.
      - "8000:8000"
    volumes:
      - ./chatbot:/app  # 호스트의 ./chatbot 디렉토리를 컨테이너의 /app 디렉토리로 마운트합니다.
    depends_on:  # 이 서비스가 의존하는 다른 서비스를 정의합니다.
      - es0  # elasticsearch 서비스가 준비될 때까지 대기합니다.

  elasticsearch:  # Elastic Search 서버 서비스 정의 시작
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4  # Elastic Search 8.13.4 이미지를 기반으로 컨테이너를 생성합니다.
    container_name: es0
    environment:  # 환경 변수를 설정합니다.
      - discovery.type=single-node  # Elastic Search를 단일 노드 모드로 실행하도록 설정합니다.
      - xpack.security.enabled=false  # 보안을 비활성화합니다.
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Elastic Search의 JVM 메모리 옵션을 설정합니다.
    ports:
      - "9200:9200"
    volumes:  # 호스트와 컨테이너 간의 디렉토리 또는 파일 마운트를 정의합니다.
      - esdata:/usr/share/elasticsearch/data  # 호스트의 esdata 볼륨을 컨테이너의 /usr/share/elasticsearch/data 디렉토리로 마운트합니다.

volumes:  # Docker 볼륨을 정의합니다.
  esdata:  # esdata라는 이름의 볼륨을 정의합니다.
    driver: local  # 로컬 드라이버를 사용하여 볼륨을 생성합니다.